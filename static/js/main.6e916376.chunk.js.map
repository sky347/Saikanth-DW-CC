{"version":3,"sources":["api/Bitcoin.js","api/ERates.js","components/Card.js","components/DisplayCards.js","App.js","reportWebVitals.js","index.js"],"names":["getBitcoinPrice","a","fetch","res","json","console","error","getERates","Card","props","currency","item","time","euroRate","rate","price","localPrice","toLocaleString","undefined","maximumFractionDigits","log","className","DisplayCards","bitcoinInfo","eRates","bpi","EUR","rate_float","localTime","Date","toLocaleTimeString","navigator","language","hour","minute","Object","entries","rates","map","index","App","useState","loading","setLoading","setBitcoinInfo","setERates","setTime","getData","bitcoinData","updated","useEffect","Content","isLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAaA,G,MAAe,uCAAG,4BAAAC,EAAA,+EAETC,MAChB,qDAHyB,cAErBC,EAFqB,gBAKdA,EAAIC,OALU,wEAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDCAfC,EAAS,uCAAG,4BAAAN,EAAA,+EAEHC,MAAM,0CAFH,cAEfC,EAFe,gBAGRA,EAAIC,OAHI,wEAKrBC,QAAQC,MAAR,MALqB,yDAAH,qD,cCsCPE,EAnCF,SAACC,GACZ,IAAMC,EAAWD,EAAME,KAAK,GACtBC,EAAOH,EAAMG,KACbC,EAAWJ,EAAMI,SACjBC,EAAOL,EAAME,KAAK,GAElBI,EAAQF,EAAWC,EACnBE,EAAaD,EAAME,oBAAeC,EAAW,CACjDC,sBAAuB,IAMzB,OAJAd,QAAQe,IAAIV,GACZL,QAAQe,IAAIN,GACZT,QAAQe,IAAIL,GAGV,mCACE,qBAAKM,UAAU,4BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,2CACA,iCAAOX,EAAP,OACA,+BAAOM,OAET,sBAAKK,UAAU,OAAf,UACE,kDACA,+BAAOT,iBCDNU,EAxBM,SAACb,GACpB,IAAMc,EAAcd,EAAMc,YACpBX,EAAOH,EAAMG,KACbY,EAASf,EAAMe,OAEfX,EAAWU,EAAYE,IAAIC,IAAIC,WAG/BC,EADY,IAAIC,KAAKjB,GACCkB,mBAAmBC,UAAUC,SAAU,CACjEC,KAAM,UACNC,OAAQ,YAGV,OACE,mCACE,qBAAKb,UAAU,cAAf,SACGc,OAAOC,QAAQZ,EAAOa,OAAOC,KAAI,SAAC3B,EAAM4B,GAAP,OAChC,cAAC,EAAD,CAAM3B,KAAMgB,EAAWf,SAAUA,EAAUF,KAAMA,GAAW4B,WCkCvDC,MAjDf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEyBF,mBAAS,IAFlC,mBAENlB,EAFM,KAEOqB,EAFP,OAGeH,mBAAS,IAHxB,mBAGNjB,EAHM,KAGEqB,EAHF,OAIWJ,qBAJX,mBAIN7B,EAJM,KAIAkC,EAJA,KAMPC,EAAO,uCAAG,8BAAA9C,EAAA,sEACYD,IADZ,cACRgD,EADQ,OAEdJ,EAAeI,GACfF,EAAQE,EAAYpC,KAAKqC,SAHX,SAIO1C,IAJP,OAIRiB,EAJQ,OAKdqB,EAAUrB,GACVmB,GAAW,GANG,4CAAH,qDASbO,qBAAU,WACRH,MACC,IAEH1C,QAAQe,IAAIsB,GACZrC,QAAQe,IAAIG,GACZlB,QAAQe,IAAII,GACZnB,QAAQe,IAAIR,GAEZ,IAAMuC,EAAU,SAAC1C,GAEf,OADkBA,EAAM2C,UAEf,mBAAG/B,UAAU,UAAb,yBAGL,qCACE,oBAAGA,UAAU,WAAb,cACG,gDAEH,cAAC,EAAD,CAAcE,YAAaA,EAAaX,KAAMA,EAAMY,OAAQA,QAMpE,OACE,8BACE,8BACE,cAAC2B,EAAD,CAASC,UAAWV,SCrCbW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6e916376.chunk.js","sourcesContent":["export const getBitcoinPrice = async () => {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://api.coindesk.com/v1/bpi/currentprice.json\"\r\n    );\r\n    return await res.json();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","export const getERates = async () => {\r\n  try {\r\n    const res = await fetch(\"https://api.exchangeratesapi.io/latest\");\r\n    return await res.json();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nconst Card = (props) => {\r\n  const currency = props.item[0];\r\n  const time = props.time;\r\n  const euroRate = props.euroRate;\r\n  const rate = props.item[1];\r\n\r\n  const price = euroRate * rate;\r\n  const localPrice = price.toLocaleString(undefined, {\r\n    maximumFractionDigits: 2,\r\n  });\r\n  console.log(currency);\r\n  console.log(rate);\r\n  console.log(price);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"divbox col-lg-4 col-sm-12\">\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <div className=\"price\">\r\n              <span>Price: </span>\r\n              <span>{currency} </span>\r\n              <span>{localPrice}</span>\r\n            </div>\r\n            <div className=\"time\">\r\n              <span>Last Updated: </span>\r\n              <span>{time}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./card.css\";\r\n\r\nconst DisplayCards = (props) => {\r\n  const bitcoinInfo = props.bitcoinInfo;\r\n  const time = props.time;\r\n  const eRates = props.eRates;\r\n\r\n  const euroRate = bitcoinInfo.bpi.EUR.rate_float;\r\n\r\n  const localDate = new Date(time);\r\n  const localTime = localDate.toLocaleTimeString(navigator.language, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cardWrapper\">\r\n        {Object.entries(eRates.rates).map((item, index) => (\r\n          <Card time={localTime} euroRate={euroRate} item={item} key={index} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayCards;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { getBitcoinPrice } from \"./api/Bitcoin\";\nimport { getERates } from \"./api/ERates\";\nimport DisplayCards from \"./components/DisplayCards\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [bitcoinInfo, setBitcoinInfo] = useState({});\n  const [eRates, setERates] = useState({});\n  const [time, setTime] = useState();\n\n  const getData = async () => {\n    const bitcoinData = await getBitcoinPrice();\n    setBitcoinInfo(bitcoinData);\n    setTime(bitcoinData.time.updated);\n    const eRates = await getERates();\n    setERates(eRates);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  console.log(loading);\n  console.log(bitcoinInfo);\n  console.log(eRates);\n  console.log(time);\n\n  const Content = (props) => {\n    const isLoading = props.isLoading;\n    if (isLoading) {\n      return <p className=\"loading\">Loading ...</p>;\n    } else {\n      return (\n        <>\n          <p className=\"mainhead\">\n            B<u>itcoin Price</u>\n          </p>\n          <DisplayCards bitcoinInfo={bitcoinInfo} time={time} eRates={eRates} />\n        </>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Content isLoading={loading} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}